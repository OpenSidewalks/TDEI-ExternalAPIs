{
    "openapi": "3.0.2",
    "info": {
        "title": "TDEI Producer API",
        "version": "1.0",
        "description": "This is an API for publishing data to the Transportation Data Equity Initiative (TDEI) data system. This API is intended for applications producing data for the TDEI system. This API supports publishing of GTFS-Pathways, GTFS-Flex v2 and OpenSidewalks data to the TDEI. ",
        "contact": {
            "name": "TDEI Support",
            "url": "https://placeholder.transequity.cs.washington.edu/support",
            "email": "placeholder_support@transequity.cs.washington.edu"
        }
    },
    "servers": [
        {
            "url": "https://placeholder.transequity.cs.washington.edu",
            "description": "Placeholder for the TDEI endpoint."
        }
    ],
    "paths": {
        "/tdei_producer": {
            "summary": "List TDEI Consumer API versions.",
            "description": "Returns a json list of the TDEI Producer API versions.",
            "get": {
                "tags": [],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/versionList"
                                },
                                "example": {
                                    "total": 2,
                                    "apis": [
                                        {
                                            "apiKey": "oa_citations",
                                            "apiVersionNumber": "v1",
                                            "apiUrl": "https://developer.uspto.gov/ds-api/oa_citations/v1/fields",
                                            "apiDocumentationUrl": "https://developer.uspto.gov/ds-api-docs/index.html?url=https://developer.uspto.gov/ds-api/swagger/docs/oa_citations.json"
                                        },
                                        {
                                            "apiKey": "cancer_moonshot",
                                            "apiVersionNumber": "v1",
                                            "apiUrl": "https://developer.uspto.gov/ds-api/cancer_moonshot/v1/fields",
                                            "apiDocumentationUrl": "https://developer.uspto.gov/ds-api-docs/index.html?url=https://developer.uspto.gov/ds-api/swagger/docs/cancer_moonshot.json"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Returns a list of versions"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "ApplicationId": []
                    }
                ],
                "operationId": "list-api-versions",
                "summary": "List available API versions",
                "description": "Lists the versions of the TDEI producer API which are available."
            }
        },
        "/tdei_producer/v1.0/agencies": {
            "summary": "Path used to retrieve the list of agencies with data in the TDEI system. Allows an agency to get the TDEI id for that agency.",
            "description": "Returns a list of agency names and agency ids for all agencies with data in the TDEI system. This path contains `GET` operation to retrive the list of agencies. ",
            "get": {
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/agency"
                                    }
                                }
                            }
                        },
                        "description": "Successful response - returns an array of `Agency` entities."
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "ApplicationId": []
                    }
                ],
                "operationId": "list-agencies",
                "summary": "List Agencies",
                "description": "Gets a list of all `Agency` entities."
            }
        },
        "/tdei_producer/v1.0/gtfs_pathways/": {
            "summary": "Path used to retrieve a list of `gtfs_pathways` data files. Allows user to get the data_record_id for a specific file.",
            "description": "The REST endpoint/path used to list and create zero or more `gtfs_pathways` entities.  This path contains a `GET` operation to return the list of pathways files and a `POST` operation to create a new pathways file.\n\nTo developer & team: This is a duplicate of the same call in tdei_consumer, I debated whether to duplicate or not, for this first version and for the MVP, I decided the duplication was ok. (delete this info when we publish the api)",
            "get": {
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/gtfs_pathways_file"
                                    }
                                }
                            }
                        },
                        "description": "Successful response - returns an array of `gtfs_pathways_file` entities."
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "operationId": "getPathwaysDataList",
                "summary": "List all gtfs_pathways data files that exist.",
                "description": "Gets a list of all `gtfs_pathways_file` entities."
            },
            "post": {
                "requestBody": {
                    "description": "meta-data and uri for pathways file",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/gtfs_pathways_upload"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "description": "File creation accepted."
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "operationId": "createPathwaysFile",
                "summary": "create pathways file.",
                "description": "upload a new pathways file. application must provide meta-data and uri to file to be uploaded"
            }
        },
        "/tdei_producer/v1.0/gtfs_pathways/versions/": {
            "summary": "List GTFS Pathways versions supported by TDEI.",
            "description": "Returns a json list of the GTFS Pathways versions supported by TDEI.",
            "get": {
                "tags": [],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/versionList"
                                },
                                "example": {
                                    "total": 2,
                                    "apis": [
                                        {
                                            "apiKey": "oa_citations",
                                            "apiVersionNumber": "v1",
                                            "apiUrl": "https://developer.uspto.gov/ds-api/oa_citations/v1/fields",
                                            "apiDocumentationUrl": "https://developer.uspto.gov/ds-api-docs/index.html?url=https://developer.uspto.gov/ds-api/swagger/docs/oa_citations.json"
                                        },
                                        {
                                            "apiKey": "cancer_moonshot",
                                            "apiVersionNumber": "v1",
                                            "apiUrl": "https://developer.uspto.gov/ds-api/cancer_moonshot/v1/fields",
                                            "apiDocumentationUrl": "https://developer.uspto.gov/ds-api-docs/index.html?url=https://developer.uspto.gov/ds-api/swagger/docs/cancer_moonshot.json"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Returns a list of pathways versions"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "ApplicationId": []
                    }
                ],
                "operationId": "list-pathways-versions",
                "summary": "List available GTFS Pathways versions",
                "description": "Lists the versions of GTFS pathways data which are supported by TDEI."
            }
        },
        "/tdei_producer/v1.0/stations": {
            "summary": "Path used to retrieve the list of agencies with data in the TDEI system.",
            "description": "Returns a list of agency names and stations ids for all stations with data in the TDEI system. This path contains `GET` operation to retrive the list of stations. ",
            "get": {
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/station"
                                    }
                                }
                            }
                        },
                        "description": "Successful response - returns an array of `Station` entities."
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "ApplicationId": []
                    }
                ],
                "operationId": "list-stations",
                "summary": "List Stations",
                "description": "Gets a list of all `Station` entities."
            }
        },
        "/tdei_producer/v1.0/gtfs_flex": {
            "summary": "Path used to retrieve a list of `gtfs_flex` data files. Allows user to get the data_record_id for a specific file so file can be updated.",
            "description": "The REST endpoint/path used to list and create zero or more `gtfs_flex_file` data file entities.  This path contains a `GET` operation to list the files and and a `POST` operation to create a new flex file. \n\nTo developer & team: This is a duplicate of the same call in tdei_consumer, I debated whether to duplicate or not, for this first version and for the MVP, I decided the duplication was ok. (delete this info when we publish the api)",
            "get": {
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/gtfs_flex_file"
                                    }
                                }
                            }
                        },
                        "description": "Successful response - returns an array of `gtfs_flex_file` entities."
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "operationId": "getflexDataList",
                "summary": "List All flexDataFiles",
                "description": "Gets a list of all `gtfs_flex_file` data file entities."
            },
            "post": {
                "requestBody": {
                    "description": "specify metadata and uri for new file",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/gtfs_flex_upload"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer"
                                }
                            }
                        },
                        "description": "Successful file creation. returns data_record_id of new file."
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "operationId": "createFlexFile",
                "summary": "upload a new gtfs_flex file",
                "description": "allows application to upload / create a new gtfs_flex file. caller must provide meta-data and a uri from which the uploaded file can be fetched."
            }
        },
        "/tdei_producer/v1.0/gtfs_flex/versions": {
            "summary": "List GTFS flex versions supported by TDEI.",
            "description": "Returns a json list of the GTFS flex versions supported by TDEI.",
            "get": {
                "tags": [],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/versionList"
                                },
                                "example": {
                                    "total": 2,
                                    "apis": [
                                        {
                                            "apiKey": "oa_citations",
                                            "apiVersionNumber": "v1",
                                            "apiUrl": "https://developer.uspto.gov/ds-api/oa_citations/v1/fields",
                                            "apiDocumentationUrl": "https://developer.uspto.gov/ds-api-docs/index.html?url=https://developer.uspto.gov/ds-api/swagger/docs/oa_citations.json"
                                        },
                                        {
                                            "apiKey": "cancer_moonshot",
                                            "apiVersionNumber": "v1",
                                            "apiUrl": "https://developer.uspto.gov/ds-api/cancer_moonshot/v1/fields",
                                            "apiDocumentationUrl": "https://developer.uspto.gov/ds-api-docs/index.html?url=https://developer.uspto.gov/ds-api/swagger/docs/cancer_moonshot.json"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Returns a list of pathways versions"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "ApplicationId": []
                    }
                ],
                "operationId": "list-flex-versions",
                "summary": "List available GTFS flex versions",
                "description": "Lists the versions of GTFS flex data which are supported by TDEI."
            }
        },
        "/tdei_producer/v1.0/gtfs_flex/{gtfs_flexId}": {
            "summary": "Path used to manage a single flexDataFile.",
            "description": "The REST endpoint/path used to get, update, and delete single instances of an `gtfs_flex_file`.  This path contains `GET` operation used to retrieve a gtfs_flex data file and `PUT` operation to update the metadata in a flex file.",
            "get": {
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/FlexResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/FileIdNotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "operationId": "getFlexDataFile",
                "summary": "Get or update a gtfs_flex data file",
                "description": "Gets the details of a single instance of a `gtfs_flex_file` data file details about a flex data file, including the uri."
            },
            "put": {
                "requestBody": {
                    "description": "Flex data file meta data and uri from which the updated file can be retrieved.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/gtfs_flex_upload"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "description": "Successful response."
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/FlexFileNotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "operationId": "updateflexDataFile",
                "summary": "Update a flexDataFile",
                "description": "Updates meta data for an an existing `gtfs_flex` data file. primarily expected to update the valid_to field."
            },
            "parameters": [
                {
                    "name": "gtfs_flexId",
                    "description": "A unique identifier for a `flexDataFile`.",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/tdei_producer/v1.0/gtfs_pathways/{gtfs_pathwaysId}": {
            "summary": "Path used to manage a single gtfs_pathways.",
            "description": "The REST endpoint/path used to get, update, and delete single instances of an `gtfs_pathways`.  This path contains `GET`, `PUT` operations used to perform the get, and update tasks, respectively.",
            "get": {
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/PathwaysResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/FileIdNotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "operationId": "getPathwaysDataFile",
                "summary": "Get a gtfs_pathways data file",
                "description": "Gets the details of a single instance of a `gtfs_pathways_file`."
            },
            "put": {
                "requestBody": {
                    "description": "Updated `gtfs_pathways` information.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/gtfs_pathways_upload"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "description": "Successful response."
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/PathwaysFileNotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "operationId": "updategtfs_pathways",
                "summary": "Update meta data for a gtfs_pathways file, mainly expect to update valid_to field.",
                "description": "Updates an existing `gtfs_pathways`."
            },
            "parameters": [
                {
                    "name": "gtfs_pathwaysId",
                    "description": "A unique identifier for a `gtfs_pathways`.",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/tdei_producer/v1.0/osw/": {
            "summary": "Retrieve the most current pathways files for an agency, station or bounding box.",
            "description": "Returns a url to a gzip'd containing geojson OSW v1 data for the specified bounding box. ",
            "get": {
                "parameters": [
                    {
                        "examples": {
                            "bounding_box": {
                                "value": {
                                    "bbox": "23.5, 123.1, 23.1, 1234.5"
                                }
                            }
                        },
                        "name": "bounding_box",
                        "description": "A bounding box which specifies the area to be searched. A bounding box is specified by a string providing the lat/lon coordinates of the corners of the bounding box. Coordinate should be specified as west, south, east, north.",
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": true
                    },
                    {
                        "name": "confidence_level",
                        "description": "Minimum confidence level required. Data returned will be at this confidence level or higher.",
                        "schema": {
                            "type": "integer"
                        },
                        "in": "query"
                    },
                    {
                        "name": "schema_version",
                        "description": "A string with the name of the schema version the application requests.",
                        "schema": {
                            "type": "string"
                        },
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/OSWResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/OSWNotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "ApplicationId": []
                    }
                ],
                "operationId": "retrieve-osw-data",
                "summary": "Retrieve OSW data.",
                "description": "Returns a url for a gzip'd geojson file containing the most current osw data for a specified bounding box. This path returns v1 osw data."
            }
        },
        "/tdei_producer/v1.0/osw/versions": {
            "summary": "List GTFS Pathways versions supported by TDEI.",
            "description": "Returns a json list of the GTFS flex versions supported by TDEI.",
            "get": {
                "tags": [],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/versionList"
                                },
                                "example": {
                                    "total": 2,
                                    "apis": [
                                        {
                                            "apiKey": "oa_citations",
                                            "apiVersionNumber": "v1",
                                            "apiUrl": "https://developer.uspto.gov/ds-api/oa_citations/v1/fields",
                                            "apiDocumentationUrl": "https://developer.uspto.gov/ds-api-docs/index.html?url=https://developer.uspto.gov/ds-api/swagger/docs/oa_citations.json"
                                        },
                                        {
                                            "apiKey": "cancer_moonshot",
                                            "apiVersionNumber": "v1",
                                            "apiUrl": "https://developer.uspto.gov/ds-api/cancer_moonshot/v1/fields",
                                            "apiDocumentationUrl": "https://developer.uspto.gov/ds-api-docs/index.html?url=https://developer.uspto.gov/ds-api/swagger/docs/cancer_moonshot.json"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Returns a list of pathways versions"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "ApplicationId": []
                    }
                ],
                "operationId": "list-osw-versions",
                "summary": "List available OSW versions",
                "description": "Lists the versions of OSW data which are supported by TDEI."
            }
        }
    },
    "components": {
        "schemas": {
            "versionList": {
                "title": "Root Type for VersionList",
                "description": "List of API Versions.",
                "type": "object",
                "properties": {
                    "versions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "example": {
                    "versions": [
                        {
                            "version": "v1.0",
                            "documentation": "link to v1.0 documentation"
                        },
                        {
                            "version": "v1.1",
                            "documentation": "link to v1.1 documentation"
                        }
                    ]
                }
            },
            "agency": {
                "title": "Root Type for Agency",
                "description": "An agency which has data stored in the TDEI system. Includes agency_id and associated agency_name. ",
                "required": [
                    "agency_id",
                    "agency_name",
                    "agency_url",
                    "agency_timezone",
                    "tdei_agency_id",
                    "agency_polygon"
                ],
                "type": "object",
                "properties": {
                    "agency_id": {
                        "description": "The GTFS agency id.",
                        "type": "integer"
                    },
                    "agency_name": {
                        "description": "The GTFS Agency name",
                        "type": "string"
                    },
                    "agency_url": {
                        "description": "URL of the transit agency.",
                        "type": "string"
                    },
                    "agency_timezone": {
                        "description": "Timezone where transit agency is located.",
                        "type": "string"
                    },
                    "agency_lang": {
                        "description": "Primary language used by this transit agency. Should be provided to help GTFS consumers choose capitalization rules and other language-specific settings for the dataset.",
                        "type": "string"
                    },
                    "agency_phone": {
                        "description": "A voice telephone number for the specified agency. This field is a string value that presents the telephone number as typical for the agency's service area. It may contain punctuation marks to group the digits of the number. Dialable text (for example, TriMet's \"503-238-RIDE\") is permitted, but the field must not contain any other descriptive text.",
                        "type": "string"
                    },
                    "agency_email": {
                        "description": "Email address actively monitored by the agency’s customer service department. This email address should be a direct contact point where transit riders can reach a customer service representative at the agency.",
                        "type": "string"
                    },
                    "tdei_agency_id": {
                        "description": "TDEI-assigned agency id. Assigned by TDEI to avoid potential conflicts between GTFS agency ids.",
                        "type": "integer"
                    },
                    "agency_polygon": {
                        "description": "A polygon which represents the boundaries of the agency's service area. A polygon is specified by a string providing the lat/lon coordinates of the polygon. The last lat/lon in the string should be the same as the first lat/lon in the string.",
                        "type": "string"
                    },
                    "agency_fare_url": {
                        "description": "URL of fare information for the agency.",
                        "type": "string"
                    }
                },
                "example": {
                    "agency_id": 1,
                    "agency_name": "King County Metro",
                    "agency_url": "http://kingcounty.gov",
                    "agency_timezone": "America/Los_Angeles",
                    "agency_lang": "en",
                    "agency_phone": "206-296-0100",
                    "agency_fare_url": "https://kingcounty.gov/depts/transportation/metro/fares-orca.aspx",
                    "agency_email": "https://blue.kingcounty.gov/about/contact/",
                    "tdei_agency_id": 5,
                    "agency_polygon": "bbox"
                }
            },
            "station": {
                "title": "Root Type for Agency",
                "description": "An agency which has data stored in the TDEI system. Includes agency_id and associated agency_name. ",
                "required": [
                    "gtfs_stop_id",
                    "stop_name",
                    "stop_lat",
                    "stop_lon",
                    "tdei_stop_id"
                ],
                "type": "object",
                "properties": {
                    "stop_code": {
                        "description": "Short text or a number that identifies the location for riders. These codes are often used in phone-based transit information systems or printed on signage to make it easier for riders to get information for a particular location. The stop_code may be the same as stop_id if it is public facing. This field should be left empty for locations without a code presented to riders.\n",
                        "type": "string"
                    },
                    "stop_name": {
                        "description": "Name of the location. The stop_name should match the agency's rider-facing name for the location as printed on a timetable, published online, or represented on signage. For translations into other languages, use translations.txt.\n\nWhen the location is a boarding area (location_type=4), the stop_name should contains the name of the boarding area as displayed by the agency. It could be just one letter (like on some European intercity railway stations), or text like “Wheelchair boarding area” (NYC’s Subway) or “Head of short trains” (Paris’ RER).\n\nConditionally Required:\n- Required for locations which are stops (location_type=0), stations (location_type=1) or entrances/exits (location_type=2).\n- Optional for locations which are generic nodes (location_type=3) or boarding areas (location_type=4).",
                        "type": "string"
                    },
                    "tts_stop_name": {
                        "description": "Readable version of the stop_name. See \"Text-to-speech field\" in the Term Definitions for more.",
                        "type": "string"
                    },
                    "stop_desc": {
                        "description": "Description of the location that provides useful, quality information. Should not be a duplicate of stop_name.",
                        "type": "string"
                    },
                    "stop_lat": {
                        "description": "Latitude of the location.\n\nFor stops/platforms (location_type=0) and boarding area (location_type=4), the coordinates must be the ones of the bus pole — if exists — and otherwise of where the travelers are boarding the vehicle (on the sidewalk or the platform, and not on the roadway or the track where the vehicle stops). \n\nConditionally Required:\n- Required for locations which are stops (location_type=0), stations (location_type=1) or entrances/exits (location_type=2).\n- Optional for locations which are generic nodes (location_type=3) or boarding areas (location_type=4).",
                        "type": "string"
                    },
                    "stop_lon": {
                        "description": "Longitude of the location.\n\nFor stops/platforms (location_type=0) and boarding area (location_type=4), the coordinates must be the ones of the bus pole — if exists — and otherwise of where the travelers are boarding the vehicle (on the sidewalk or the platform, and not on the roadway or the track where the vehicle stops). \n\nConditionally Required:\n- Required for locations which are stops (location_type=0), stations (location_type=1) or entrances/exits (location_type=2).\n- Optional for locations which are generic nodes (location_type=3) or boarding areas (location_type=4).",
                        "type": "string"
                    },
                    "zone_id": {
                        "description": "Identifies the fare zone for a stop. If this record represents a station or station entrance, the zone_id is ignored.\n\nConditionally Required:\n- Required if providing fare information using fare_rules.txt \n- Optional otherwise.",
                        "type": "integer"
                    },
                    "stop_url": {
                        "description": "URL of a web page about the location. This should be different from the agency.agency_url and the routes.route_url field values.",
                        "type": "string"
                    },
                    "location_type": {
                        "description": "Location type. Valid options are:\n\n0 (or blank) - Stop (or Platform). A location where passengers board or disembark from a transit vehicle. Is called a platform when defined within a parent_station.\n1 - Station. A physical structure or area that contains one or more platform.\n2 - Entrance/Exit. A location where passengers can enter or exit a station from the street. If an entrance/exit belongs to multiple stations, it may be linked by pathways to both, but the data provider must pick one of them as parent.\n3 - Generic Node. A location within a station, not matching any other location_type, that may be used to link together pathways define in pathways.txt.\n4 - Boarding Area. A specific location on a platform, where passengers can board and/or alight vehicles.",
                        "type": "string"
                    },
                    "parent_station": {
                        "description": "Defines hierarchy between the different locations defined in stops.txt. It contains the ID of the parent location, as followed:\n\n- Stop/platform (location_type=0): the parent_station field contains the ID of a station.\n- Station (location_type=1): this field must be empty.\n- Entrance/exit (location_type=2) or generic node (location_type=3): the parent_station field contains the ID of a station (location_type=1)\n- Boarding Area (location_type=4): the parent_station field contains ID of a platform.\n\nConditionally Required:\n- Required for locations which are entrances (location_type=2), generic nodes (location_type=3) or boarding areas (location_type=4).\n- Optional for stops/platforms (location_type=0).\n- Forbidden for stations (location_type=1).\n",
                        "type": "integer"
                    },
                    "stop_timezone": {
                        "description": "Timezone of the location. If the location has a parent station, it inherits the parent station’s timezone instead of applying its own. Stations and parentless stops with empty stop_timezone inherit the timezone specified by agency.agency_timezone. If stop_timezone values are provided, the times in stop_times.txt should be entered as the time since midnight in the timezone specified by agency.agency_timezone. This ensures that the time values in a trip always increase over the course of a trip, regardless of which timezones the trip crosses.",
                        "type": "string"
                    },
                    "wheelchair_boarding": {
                        "description": "Indicates whether wheelchair boardings are possible from the location. Valid options are: \n\nFor parentless stops:\n0 or empty - No accessibility information for the stop.\n1 - Some vehicles at this stop can be boarded by a rider in a wheelchair.\n2 - Wheelchair boarding is not possible at this stop. \n\nFor child stops: \n0 or empty - Stop will inherit its wheelchair_boarding behavior from the parent station, if specified in the parent.\n1 - There exists some accessible path from outside the station to the specific stop/platform.\n2 - There exists no accessible path from outside the station to the specific stop/platform.\n\nFor station entrances/exits: \n0 or empty - Station entrance will inherit its wheelchair_boarding behavior from the parent station, if specified for the parent.\n1 - Station entrance is wheelchair accessible.\n2 - No accessible path from station entrance to stops/platforms.",
                        "type": "string"
                    },
                    "level_id": {
                        "description": "Level of the location. The same level may be used by multiple unlinked stations.",
                        "type": "integer"
                    },
                    "platform_code": {
                        "description": "Platform identifier for a platform stop (a stop belonging to a station). This should be just the platform identifier (eg. \"G\" or \"3\"). Words like “platform” or \"track\" (or the feed’s language-specific equivalent) should not be included. This allows feed consumers to more easily internationalize and localize the platform identifier into other languages.",
                        "type": "string"
                    },
                    "tdei_stop_id": {
                        "description": "TDEI assigned stop id. Included to avoid potential duplicates in the gtfs stop_id.",
                        "type": "integer"
                    },
                    "gtfs_stop_id": {
                        "description": "stop_id from GTFS.\n\nIdentifies a location: stop/platform, station, entrance/exit, generic node or boarding area (see location_type). \n\nMultiple routes may use the same stop_id.",
                        "type": "integer"
                    }
                },
                "example": {
                    "gtfs_stop_id": 990006,
                    "stop_code": "stop code - need example",
                    "stop_name": "Northgate Station",
                    "tts_stop_name": "Northgate Station - need to verify",
                    "stop_desc": "Northgate Transit station - need more detail",
                    "stop_lat": "47.70312",
                    "stop_lon": "-122.32839",
                    "zone_id": "fare zoneid - need example",
                    "stop_url": "https://www.soundtransit.org/ride-with-us/stops-stations/northgate-station",
                    "location_type": "1",
                    "parent_station": "not valid for Northgate, but will be valid for others",
                    "stop_timezone": "America/Los_Angeles",
                    "wheelchair_boarding": "1",
                    "level_id": "level - need example",
                    "platform_code": "not valid for northgate, but may valid for others",
                    "tdei_stop_id": 23
                }
            },
            "gtfs_flex_download": {
                "title": "Root Type for gtfs_flex",
                "description": "represents a gtfs_flex data file. same as in consumer api, same as gtfs_flex, adds uri",
                "required": [
                    "gtfs_flex_file",
                    "url"
                ],
                "type": "object",
                "properties": {
                    "url": {
                        "description": "url with link to file to be downloaded",
                        "type": "string"
                    },
                    "gtfs_flex_file": {
                        "$ref": "#/components/schemas/gtfs_flex_file",
                        "description": "flex file md"
                    }
                },
                "example": {
                    "url": "some text",
                    "gtfs_flex_file": {
                        "agency": {
                            "agency_id": 31,
                            "agency_name": "some text",
                            "agency_url": "some text",
                            "agency_timezone": "some text",
                            "agency_lang": "some text",
                            "agency_phone": "some text",
                            "agency_email": "some text",
                            "tdei_agency_id": 75,
                            "agency_polygon": "some text",
                            "agency_fare_url": "some text"
                        },
                        "valid_from": "2018-01-17",
                        "valid_to": "2018-01-17",
                        "confidence_level": 99,
                        "flex_schema_version": "some text",
                        "data_record_id": 12
                    }
                }
            },
            "gtfs_flex_upload": {
                "title": "Root Type for gtfs_flex",
                "description": "represents meta data needed to upload a gtfs_flex data file",
                "required": [
                    "agency",
                    "uri",
                    "valid_from"
                ],
                "type": "object",
                "properties": {
                    "agency": {
                        "$ref": "#/components/schemas/agency",
                        "description": "Information describing an agency. Based on GTFS but with geo-location information added."
                    },
                    "uri": {
                        "description": "URI referencing the file. to be uploaded.",
                        "type": "string"
                    },
                    "valid": {
                        "description": "Indicates if the file is valid or not. Used to invalidate a file.",
                        "enum": [
                            "\"yes\"",
                            "\"no\""
                        ],
                        "type": "string"
                    },
                    "valid_from": {
                        "description": "date from which the file is valid",
                        "type": "string"
                    },
                    "valid_to": {
                        "description": "date to which the file is valid",
                        "type": "string"
                    }
                }
            },
            "gtfs_flex_file": {
                "title": "Root Type for gtfs_flex",
                "description": "represents a gtfs_flex data file. same as in consumer api, ",
                "required": [
                    "agency",
                    "valid_from",
                    "confidence_level",
                    "flex_schema_version",
                    "data_record_id"
                ],
                "type": "object",
                "properties": {
                    "agency": {
                        "$ref": "#/components/schemas/agency",
                        "description": "agency information"
                    },
                    "valid_from": {
                        "format": "date",
                        "description": "date from which file is valid",
                        "type": "string"
                    },
                    "valid_to": {
                        "format": "date",
                        "description": "date until which file is valid",
                        "type": "string"
                    },
                    "confidence_level": {
                        "description": "TDEI-assigned confidence level",
                        "type": "integer"
                    },
                    "flex_schema_version": {
                        "description": "flex schema version number",
                        "type": "string"
                    },
                    "data_record_id": {
                        "description": "tdei-assigned data record id",
                        "type": "integer"
                    }
                },
                "example": "{\n    \"agency\": {\n        \"agency_id\": 1,\n        \"agency_name\": \"King County Metro\",\n        \"agency_url\": \"http://kingcounty.gov\",\n        \"agency_timezone\": \"America/Los_Angeles\",\n        \"agency_lang\": \"en\",\n        \"agency_phone\": \"206-296-0100\",\n        \"agency_fare_url\": \"https://kingcounty.gov/depts/transportation/metro/fares-orca.aspx\",\n        \"agency_email\": \"https://blue.kingcounty.gov/about/contact/\"\n    },\n    \"valid_from\": \"05-19-2022\",\n    \"valid_to\": \"05-20-2022\"\n    \"confidence_level\": 5,\n    \"data_record_id\": 23,\n    \"flex_schema_version\": 1,\n}"
            },
            "gtfs_pathways_upload": {
                "title": "Root Type for gtfs_pathways",
                "description": "Describes a gtfs pathways file meta data. Same as gtfs_pathways, but adds uri.",
                "required": [
                    "station"
                ],
                "type": "object",
                "properties": {
                    "valid_from": {
                        "format": "date",
                        "description": "date from which this file is valid",
                        "type": "string"
                    },
                    "valid_to": {
                        "format": "date",
                        "description": "date through which this file is valid",
                        "type": "string"
                    },
                    "uri": {
                        "description": "uri from which the file can be retrieved",
                        "type": "string"
                    },
                    "valid": {
                        "description": "yes/no is the file valid or not. Intended for use by the data producer / application to indicate a file is invalid.",
                        "enum": [
                            "yes",
                            "no"
                        ],
                        "type": "string"
                    },
                    "station": {
                        "$ref": "#/components/schemas/station",
                        "description": "information about the associated transit station"
                    }
                },
                "example": {
                    "valid_from": "2018-01-17",
                    "valid_to": "2018-01-17",
                    "uri": "some text",
                    "valid": "no",
                    "station": {
                        "stop_code": "some text",
                        "stop_name": "some text",
                        "tts_stop_name": "some text",
                        "stop_desc": "some text",
                        "stop_lat": "some text",
                        "stop_lon": "some text",
                        "zone_id": 95,
                        "stop_url": "some text",
                        "location_type": "some text",
                        "parent_station": 49,
                        "stop_timezone": "some text",
                        "wheelchair_boarding": "some text",
                        "level_id": 99,
                        "platform_code": "some text",
                        "tdei_stop_id": 31,
                        "gtfs_stop_id": 99
                    }
                }
            },
            "gtfs_pathways_download": {
                "title": "Root Type for gtfs_pathways",
                "description": "Describes a gtfs pathways file meta data.",
                "required": [
                    "url",
                    "gtfs_pathways_file"
                ],
                "type": "object",
                "properties": {
                    "url": {
                        "description": "url from which the file can be downloaded",
                        "type": "string"
                    },
                    "gtfs_pathways_file": {
                        "$ref": "#/components/schemas/gtfs_pathways_file",
                        "description": "Information about the gtfs pathways file to be downloaded."
                    }
                },
                "example": {
                    "agency_id": 1,
                    "agency_name": "King County Metro",
                    "confidence_level": 5,
                    "data_record_id": 23,
                    "pathways_schema_version": 1,
                    "station_id": 4,
                    "station_name": "Northgate",
                    "valid_from": "05-19-2022",
                    "valid_to": "05-20-2022"
                }
            },
            "gtfs_pathways_file": {
                "title": "Root Type for gtfs_pathways",
                "description": "Describes a gtfs pathways file meta data.",
                "required": [
                    "confidence_level",
                    "data_record",
                    "pathways_schema_version",
                    "valid_from",
                    "station"
                ],
                "type": "object",
                "properties": {
                    "valid_from": {
                        "format": "date",
                        "description": "date from which this file is valid",
                        "type": "string"
                    },
                    "valid_to": {
                        "format": "date",
                        "description": "date through which this file is valid, if empty indicates file is valid as of the date of the download request.",
                        "type": "string"
                    },
                    "confidence_level": {
                        "description": "TDEI assigned confidence level",
                        "type": "integer"
                    },
                    "data_record": {
                        "description": "TDEI assigned data record id",
                        "type": "integer"
                    },
                    "pathways_schema_version": {
                        "description": "version of the pathways schema to which this file belongs",
                        "type": "string"
                    },
                    "station": {
                        "$ref": "#/components/schemas/station",
                        "description": "The (transit) station to which this file applies."
                    }
                },
                "example": {
                    "valid_from": "2018-01-17",
                    "valid_to": "2018-01-17",
                    "confidence_level": 74,
                    "data_record": 61,
                    "pathways_schema_version": "some text",
                    "station": {
                        "stop_code": "some text",
                        "stop_name": "some text",
                        "tts_stop_name": "some text",
                        "stop_desc": "some text",
                        "stop_lat": "some text",
                        "stop_lon": "some text",
                        "zone_id": 24,
                        "stop_url": "some text",
                        "location_type": "some text",
                        "parent_station": 1,
                        "stop_timezone": "some text",
                        "wheelchair_boarding": "some text",
                        "level_id": 53,
                        "platform_code": "some text",
                        "tdei_stop_id": 68,
                        "gtfs_stop_id": 61
                    }
                }
            }
        },
        "responses": {
            "Unauthorized": {
                "description": "This request is unauthorized. appID is invalid. Please obtain a valid application ID (appID)."
            },
            "InternalServerError": {
                "description": "An server error occurred."
            },
            "FlexResponse": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/gtfs_flex_download"
                        }
                    }
                },
                "description": "Response object for returning flex data. Includes metadata about flex file and uri to flex file."
            },
            "PathwaysResponse": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/gtfs_pathways_download"
                        }
                    }
                },
                "description": "A list of urls with gtfs pathways data. "
            },
            "OSWResponse": {
                "content": {
                    "application/json": {
                        "examples": {
                            "OSW Return object with valid range": {
                                "value": {
                                    "bounding_box": "123.1, 123.4, 123.6, 123.7",
                                    "confidence_level": 5,
                                    "valid_from": "05-19-2022",
                                    "valid_to": "05-20-2022",
                                    "url": "url with link to data file"
                                }
                            }
                        }
                    }
                },
                "description": "A url to a gzip'd geojson OSW file."
            },
            "PathwaysFileNotFound": {
                "description": "A GTFS pathways file that matches the specified parameters (combination of agencyid, stationid, confidence level, and version) was not found."
            },
            "FlexFileNotFound": {
                "description": "A GTFS flex file that matches the specified parameters (combination of agencyid, confidence level, and version) was not found."
            },
            "FileIdNotFound": {
                "description": "A file with the specified id was not found. Use the /tdei_consumer/v1.0/gtfs_pathways or /tdei_consumer/v1.0/gtfs_flex endpoints to find valid file ids. "
            },
            "OSWNotFound": {
                "description": "OSW data meeting the specifications (version and bounding box) was not found.Data is expected to be available for King and Snohomish counties in Washington, Multnomah and Columbia counties in Oregon, and Baltimore and Harford counties in Maryland."
            },
            "InvalidRequest": {
                "description": "The request was invalid. For example, trying to do a meta-data update that is not allowed."
            }
        },
        "securitySchemes": {
            "ApplicationId": {
                "type": "apiKey",
                "description": "Application Id required by all applications that use the TDEI Consumer API.",
                "name": "appID",
                "in": "query"
            }
        }
    },
    "security": [
        {
            "ApplicationId": []
        }
    ]
}
