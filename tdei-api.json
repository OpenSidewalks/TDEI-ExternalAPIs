{
    "openapi": "3.0.2",
    "info": {
        "title": "TDEI API",
        "version": "1.0",
        "description": "This is an API for publishing data to the Transportation Data Equity Initiative (TDEI) data system. This API is intended for applications producing data for and consuming data from the TDEI system. This API supports publishing of GTFS-Pathways, GTFS-Flex v2 and OpenSidewalks data to the TDEI. ",
        "contact": {
            "name": "TDEI Support",
            "url": "https://placeholder.transequity.cs.washington.edu/support",
            "email": "placeholder_support@transequity.cs.washington.edu"
        }
    },
    "servers": [
        {
            "url": "https://placeholder.transequity.cs.washington.edu",
            "description": "Placeholder for the TDEI endpoint."
        }
    ],
    "paths": {
        "/api": {
            "summary": "List TDEI API versions.",
            "description": "Returns a json list of the TDEI API versions.",
            "get": {
                "tags": [],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/versionList"
                                },
                                "example": {
                                    "total": 2,
                                    "apis": [
                                        {
                                            "apiKey": "oa_citations",
                                            "apiVersionNumber": "v1",
                                            "apiUrl": "https://developer.uspto.gov/ds-api/oa_citations/v1/fields",
                                            "apiDocumentationUrl": "https://developer.uspto.gov/ds-api-docs/index.html?url=https://developer.uspto.gov/ds-api/swagger/docs/oa_citations.json"
                                        },
                                        {
                                            "apiKey": "cancer_moonshot",
                                            "apiVersionNumber": "v1",
                                            "apiUrl": "https://developer.uspto.gov/ds-api/cancer_moonshot/v1/fields",
                                            "apiDocumentationUrl": "https://developer.uspto.gov/ds-api-docs/index.html?url=https://developer.uspto.gov/ds-api/swagger/docs/cancer_moonshot.json"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Returns a list of versions"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "ApplicationId": []
                    }
                ],
                "operationId": "list-api-versions",
                "summary": "List available API versions",
                "description": "Lists the versions of the TDEI  API which are available."
            }
        },
        "/api/v1.0/agencies": {
            "summary": "Path used to retrieve the list of agencies with data in the TDEI system. Allows callers to get the tdei_agency_id id for an agency.",
            "description": "Returns the tdei_agency_id and gtfs agency information for all agencies with data in the TDEI system. ",
            "get": {
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/agency"
                                    }
                                }
                            }
                        },
                        "description": "Successful response - returns an array of `Agency` entities."
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "ApplicationId": []
                    }
                ],
                "operationId": "list-agencies",
                "summary": "List Agencies",
                "description": "Returns a list of all `agency` entities. See endpoint description for detail."
            }
        },
        "/api/v1.0/stations": {
            "summary": "Path used to retrieve the list of stations with data in the TDEI system. Allows callers to get the tdei_station_id id for a station.",
            "description": "Returns the tdei_station_id and gtfs station information for all stations with data in the TDEI system. ",
            "get": {
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/station"
                                    }
                                }
                            }
                        },
                        "description": "Returns an array of `Station` entities. "
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "ApplicationId": []
                    }
                ],
                "operationId": "list-stations",
                "summary": "List Stations",
                "description": "Returns a list of all `Station` entities. See endpoint description for detail."
            }
        },
        "/api/v1.0/osw/": {
            "summary": "List GTFS Pathways versions supported by TDEI.",
            "description": "Returns a json list of the GTFS flex versions supported by TDEI.",
            "get": {
                "tags": [],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/versionList"
                                },
                                "example": {
                                    "total": 2,
                                    "apis": [
                                        {
                                            "apiKey": "oa_citations",
                                            "apiVersionNumber": "v1",
                                            "apiUrl": "https://developer.uspto.gov/ds-api/oa_citations/v1/fields",
                                            "apiDocumentationUrl": "https://developer.uspto.gov/ds-api-docs/index.html?url=https://developer.uspto.gov/ds-api/swagger/docs/oa_citations.json"
                                        },
                                        {
                                            "apiKey": "cancer_moonshot",
                                            "apiVersionNumber": "v1",
                                            "apiUrl": "https://developer.uspto.gov/ds-api/cancer_moonshot/v1/fields",
                                            "apiDocumentationUrl": "https://developer.uspto.gov/ds-api-docs/index.html?url=https://developer.uspto.gov/ds-api/swagger/docs/cancer_moonshot.json"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Returns a list of pathways versions"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "ApplicationId": []
                    }
                ],
                "operationId": "list-osw-versions",
                "summary": "List available OSW versions",
                "description": "Lists the versions of OSW data which are supported by TDEI."
            }
        },
        "/api/v1.0/gtfs-flex/": {
            "summary": "List GTFS flex versions supported by TDEI.",
            "description": "Returns a json list of the GTFS flex versions supported by TDEI.",
            "get": {
                "tags": [],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/versionList"
                                },
                                "example": {
                                    "total": 2,
                                    "apis": [
                                        {
                                            "apiKey": "oa_citations",
                                            "apiVersionNumber": "v1",
                                            "apiUrl": "https://developer.uspto.gov/ds-api/oa_citations/v1/fields",
                                            "apiDocumentationUrl": "https://developer.uspto.gov/ds-api-docs/index.html?url=https://developer.uspto.gov/ds-api/swagger/docs/oa_citations.json"
                                        },
                                        {
                                            "apiKey": "cancer_moonshot",
                                            "apiVersionNumber": "v1",
                                            "apiUrl": "https://developer.uspto.gov/ds-api/cancer_moonshot/v1/fields",
                                            "apiDocumentationUrl": "https://developer.uspto.gov/ds-api-docs/index.html?url=https://developer.uspto.gov/ds-api/swagger/docs/cancer_moonshot.json"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Returns a list of flex versions supported by TDEI."
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "ApplicationId": []
                    }
                ],
                "operationId": "list-flex-versions",
                "summary": "List available GTFS flex versions",
                "description": "Lists the versions of GTFS flex data which are supported by TDEI."
            }
        },
        "/api/v1.0/gtfs-pathways/": {
            "summary": "List GTFS Pathways versions supported by TDEI.",
            "description": "Returns a json list of the GTFS Pathways versions supported by TDEI.",
            "get": {
                "tags": [],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/versionList"
                                },
                                "example": {
                                    "total": 2,
                                    "apis": [
                                        {
                                            "apiKey": "oa_citations",
                                            "apiVersionNumber": "v1",
                                            "apiUrl": "https://developer.uspto.gov/ds-api/oa_citations/v1/fields",
                                            "apiDocumentationUrl": "https://developer.uspto.gov/ds-api-docs/index.html?url=https://developer.uspto.gov/ds-api/swagger/docs/oa_citations.json"
                                        },
                                        {
                                            "apiKey": "cancer_moonshot",
                                            "apiVersionNumber": "v1",
                                            "apiUrl": "https://developer.uspto.gov/ds-api/cancer_moonshot/v1/fields",
                                            "apiDocumentationUrl": "https://developer.uspto.gov/ds-api-docs/index.html?url=https://developer.uspto.gov/ds-api/swagger/docs/cancer_moonshot.json"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Returns a list of pathways versions"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "ApplicationId": []
                    }
                ],
                "operationId": "list-pathways-versions",
                "summary": "List available GTFS Pathways versions",
                "description": "Lists the versions of GTFS pathways data which are supported by TDEI."
            }
        },
        "/api/v1.0/gtfs-pathways/list": {
            "summary": "Path used to retrieve a list of gtfs pathways files. Bounding box, confidence, pathways version can be specified. Allows user to get the tdei_record_id for a specific file so file can be updated.",
            "description": "This endpoint returns a json list of all gtfs flex files stored in the TDEI system that meet the specified criteria. Criteria that can be specified include: bounding box, minimum confidence level and flex version.\n\nThis endpoint can be used by an application developer to obtain a list of gtfs flex files in the TDEI system meeting the specified criteria. This endpoint returns a list of file-metadata including the uris of the file, which can be used to fetch the files themselves.",
            "get": {
                "parameters": [
                    {
                        "name": "bbox",
                        "description": "A bounding box which specifies the area to be searched. A bounding box is specified by a string providing the lat/lon coordinates of the corners of the bounding box. Coordinate should be specified as west, south, east, north.",
                        "schema": {
                            "type": "string"
                        },
                        "in": "query"
                    },
                    {
                        "name": "confidence_level",
                        "description": "Minimum confidence level required by application. Data returned will be at this confidence level or higher.",
                        "schema": {
                            "type": "integer"
                        },
                        "in": "query"
                    },
                    {
                        "name": "version",
                        "description": "version name of the pathways schema version that the application requests. list of versions can be found with /api/v1.0/gtfs_pathways path",
                        "schema": {
                            "type": "string"
                        },
                        "in": "query"
                    },
                    {
                        "name": "date_time",
                        "description": "date-time for which the caller is interested in obtaining files. all files that are valid at the specified date-time and meet the other criteria will be returned.",
                        "schema": {
                            "format": "date-time",
                            "type": "string"
                        },
                        "in": "query",
                        "required": false
                    },
                    {
                        "name": "tdei_agency_id",
                        "description": "tdei-assigned agency id. Necessary to ensure that agency ids are unique. Represented as a UUID.",
                        "schema": {
                            "type": "string"
                        },
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/gtfs_pathways_download"
                                    }
                                }
                            }
                        },
                        "description": "Successful response - returns an array of `gtfs_pathways_file` entities."
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "ApplicationId": []
                    }
                ],
                "operationId": "list-pathways-files",
                "summary": "List pathways files meeting criteria.",
                "description": "Returns a list of all `gtfs_pathways_file` file entities. See endpoint description for detail."
            }
        },
        "/api/v1.0/gtfs-pathways/upload/": {
            "summary": "Path used to upload / create a new gtfs pathways file.",
            "description": "This path allows a user to upload or create a new gtfs pathways file. The caller must provide metadata about the file - both gtfs station metadata and metadata for the tdei system. tdei required metadata includes information about how and when the data was collected and valid dates of the file.  Returns the tdei_record_id of the file.",
            "post": {
                "requestBody": {
                    "description": "meta-data and uri for pathways file",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/gtfs_pathways_download"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "description": "File creation accepted."
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "ApplicationId": []
                    }
                ],
                "operationId": "upload-pathways-file",
                "summary": "create pathways file.",
                "description": "Allows application to upload / create a new gtfs pathways file. See endpoint description for detail."
            }
        },
        "/api/v1.0/osw/list": {
            "summary": "Path used to retrieve a list of osw files. Bounding box, confidence, osw version can be specified. Allows user to get the tdei_record_id for a specific file so file can be updated.",
            "description": "This endpoint returns a list of url to gzip'd geojson files with osw data that meet the specified criteria. Criteria that can be specified include: bounding box, minimum confidence level and pathways version.\n\nThis endpoing can be used by an application developer to obtain a list of osw files in the TDEI system meeting the specified criteria.",
            "get": {
                "parameters": [
                    {
                        "examples": {
                            "bounding_box": {
                                "value": {
                                    "bbox": "23.5, 123.1, 23.1, 1234.5"
                                }
                            }
                        },
                        "name": "bounding_box",
                        "description": "A bounding box which specifies the area to be searched. A bounding box is specified by a string providing the lat/lon coordinates of the corners of the bounding box. Coordinate should be specified as west, south, east, north.",
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": true
                    },
                    {
                        "name": "confidence_level",
                        "description": "Minimum confidence level required. Data returned will be at this confidence level or higher.",
                        "schema": {
                            "type": "integer"
                        },
                        "in": "query"
                    },
                    {
                        "name": "schema_version",
                        "description": "A string with the name of the schema version the application requests.",
                        "schema": {
                            "type": "string"
                        },
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/OSWResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/OSWNotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "ApplicationId": []
                    }
                ],
                "operationId": "list-osw-files",
                "summary": "List osw files meeting criteria.",
                "description": "Returns a list of all osw file entities. See endpoint description for detail."
            }
        },
        "/api/v1.0/gtfs-flex/upload": {
            "summary": "Path used to upload / create a new gtfs flex file.",
            "description": "This path allows a user to upload or create a new gtfs flex file. The caller must provide metadata about the file - both gtfs agency metadata and metadata for the tdei system. tdei required metadata includes information about how and when the data was collected and valid dates of the file.  Returns the tdei_record_id of the file.",
            "post": {
                "requestBody": {
                    "description": "specify metadata and uri for new file",
                    "required": true
                },
                "responses": {
                    "202": {
                        "description": "Successful file creation. returns data_record_id of new file."
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "ApplicationId": []
                    }
                ],
                "operationId": "upload-flex-file",
                "summary": "upload a new gtfs_flex file",
                "description": "Allows application to upload / create a new gtfs_flex file. See endpoint description for detail."
            }
        },
        "/api/v1.0/osw/upload/": {
            "summary": "Path used to upload/create a new osw data file.",
            "description": "This path allows a user to upload or create a new osw file. The caller must provide metadata about the file - both osw-specific metadata and metadata for the tdei system.\ntdei required metadata includes information about how and when the data was collected and valid dates of the file. Returns the tdei_record_id of the file.",
            "post": {
                "requestBody": {
                    "description": "meta-data and uri for pathways file",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/osw_upload"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer"
                                }
                            }
                        },
                        "description": "File creation accepted."
                    },
                    "400": {
                        "$ref": "#/components/responses/InvalidRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "ApplicationId": []
                    }
                ],
                "operationId": "upload-osw-file",
                "summary": "upload a new osw file",
                "description": "Allows application to upload / create a new osw file. See endpoint description for detail."
            }
        },
        "/api/v1.0/gtfs-flex/list/": {
            "summary": "Path used to retrieve a list of gtfs flex files. Bounding box, confidence, flex version, date time and agency id can be specified. Allows user to get the tdei_record_id for a specific file so file can be updated.",
            "description": "This endpoint returns a json list of all gtfs flex files stored in the TDEI system that meet the specified criteria. Criteria that can be specified include: bounding box, minimum confidence level, flex version, date time and agency id.\n\nThis endpoint can be used by an application developer to obtain a list of gtfs flex files in the TDEI system meeting the specified criteria. This endpoint returns a list of file-metadata including the uris of the file, which can be used to fetch the files themselves.",
            "get": {
                "parameters": [
                    {
                        "name": "bbox",
                        "description": "A bounding box which specifies the area to be searched. A bounding box is specified by a string providing the lat/lon coordinates of the corners of the bounding box. Coordinate should be specified as west, south, east, north.",
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false
                    },
                    {
                        "name": "confidence-level",
                        "description": "Minimum confidence level required by application. Data returned will be at this confidence level or higher.",
                        "schema": {
                            "type": "integer"
                        },
                        "in": "query"
                    },
                    {
                        "name": "version",
                        "description": "version name of the flex schema version that the application requests. list of versions can be found with /api/v1.0/gtfs_flex path",
                        "schema": {
                            "type": "string"
                        },
                        "in": "query"
                    },
                    {
                        "name": "tdei_agency_id",
                        "description": "tdei-assigned agency id. Necessary to ensure that agency ids are unique. Represented as a UUID.",
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false
                    },
                    {
                        "name": "date_time",
                        "description": "date-time for which the caller is interested in obtaining files. all files that are valid at the specified date-time and meet the other criteria will be returned.",
                        "schema": {
                            "format": "date-time",
                            "type": "string"
                        },
                        "in": "query",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/gtfs_flex_download"
                                    }
                                }
                            }
                        },
                        "description": "Successful response - returns an array of `gtfs_flex_file` entities."
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                },
                "security": [
                    {
                        "ApplicationId": []
                    }
                ],
                "operationId": "list-flex-files",
                "summary": "List flex files meeting specified criteria.",
                "description": "Returns a list of all `gtfs_flex_file` file entities. See endpoint description for detail."
            }
        }
    },
    "components": {
        "schemas": {
            "versionList": {
                "title": "Root Type for VersionList",
                "description": "List of API Versions.",
                "type": "object",
                "properties": {
                    "versions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "example": {
                    "versions": [
                        {
                            "version": "v1.0",
                            "documentation": "link to v1.0 documentation"
                        },
                        {
                            "version": "v1.1",
                            "documentation": "link to v1.1 documentation"
                        }
                    ]
                }
            },
            "osw_file": {
                "title": "Root Type for gtfs_pathways",
                "description": "Describes a gtfs pathways file meta data.",
                "required": [
                    "tdei_generator_metadata",
                    "tdei_system_metadata",
                    "osw_metadata"
                ],
                "type": "object",
                "properties": {
                    "tdei_generator_metadata": {
                        "$ref": "#/components/schemas/tdei_generator_metadata",
                        "description": "Metadata provided by the data generator"
                    },
                    "tdei_system_metadata": {
                        "$ref": "#/components/schemas/tdei_system_metadata",
                        "description": "Metadata provided by the tdei system."
                    },
                    "osw_metadata": {
                        "$ref": "#/components/schemas/osw_metadata",
                        "description": "metadata about an osw file"
                    }
                },
                "example": {
                    "valid_from": "2018-01-17",
                    "valid_to": "2018-01-17",
                    "confidence_level": 74,
                    "tdei_record_id": 61,
                    "pathways_schema_version": "some text",
                    "station": {
                        "stop_code": "some text",
                        "stop_name": "some text",
                        "tts_stop_name": "some text",
                        "stop_desc": "some text",
                        "stop_lat": "some text",
                        "stop_lon": "some text",
                        "zone_id": 24,
                        "stop_url": "some text",
                        "location_type": "some text",
                        "parent_station": 1,
                        "stop_timezone": "some text",
                        "wheelchair_boarding": "some text",
                        "level_id": 53,
                        "platform_code": "some text",
                        "tdei_stop_id": 68,
                        "gtfs_stop_id": 61
                    }
                }
            },
            "gtfs_station": {
                "title": "Root Type for Agency",
                "description": "The gtfs station information for an agency with data stored in tdei. Matches the gtfs spec for station. ",
                "required": [
                    "gtfs_stop_id",
                    "stop_name",
                    "stop_lat",
                    "stop_lon",
                    "tdei_stop_id"
                ],
                "type": "object",
                "properties": {
                    "stop_code": {
                        "description": "Short text or a number that identifies the location for riders. These codes are often used in phone-based transit information systems or printed on signage to make it easier for riders to get information for a particular location. The stop_code may be the same as stop_id if it is public facing. This field should be left empty for locations without a code presented to riders.\n",
                        "type": "string"
                    },
                    "stop_name": {
                        "description": "Name of the location. The stop_name should match the agency's rider-facing name for the location as printed on a timetable, published online, or represented on signage. For translations into other languages, use translations.txt.\n\nWhen the location is a boarding area (location_type=4), the stop_name should contains the name of the boarding area as displayed by the agency. It could be just one letter (like on some European intercity railway stations), or text like “Wheelchair boarding area” (NYC’s Subway) or “Head of short trains” (Paris’ RER).\n\nConditionally Required:\n- Required for locations which are stops (location_type=0), stations (location_type=1) or entrances/exits (location_type=2).\n- Optional for locations which are generic nodes (location_type=3) or boarding areas (location_type=4).",
                        "type": "string"
                    },
                    "tts_stop_name": {
                        "description": "Readable version of the stop_name. See \"Text-to-speech field\" in the Term Definitions for more.",
                        "type": "string"
                    },
                    "stop_desc": {
                        "description": "Description of the location that provides useful, quality information. Should not be a duplicate of stop_name.",
                        "type": "string"
                    },
                    "stop_lat": {
                        "description": "Latitude of the location.\n\nFor stops/platforms (location_type=0) and boarding area (location_type=4), the coordinates must be the ones of the bus pole — if exists — and otherwise of where the travelers are boarding the vehicle (on the sidewalk or the platform, and not on the roadway or the track where the vehicle stops). \n\nConditionally Required:\n- Required for locations which are stops (location_type=0), stations (location_type=1) or entrances/exits (location_type=2).\n- Optional for locations which are generic nodes (location_type=3) or boarding areas (location_type=4).",
                        "type": "string"
                    },
                    "stop_lon": {
                        "description": "Longitude of the location.\n\nFor stops/platforms (location_type=0) and boarding area (location_type=4), the coordinates must be the ones of the bus pole — if exists — and otherwise of where the travelers are boarding the vehicle (on the sidewalk or the platform, and not on the roadway or the track where the vehicle stops). \n\nConditionally Required:\n- Required for locations which are stops (location_type=0), stations (location_type=1) or entrances/exits (location_type=2).\n- Optional for locations which are generic nodes (location_type=3) or boarding areas (location_type=4).",
                        "type": "string"
                    },
                    "zone_id": {
                        "description": "Identifies the fare zone for a stop. If this record represents a station or station entrance, the zone_id is ignored.\n\nConditionally Required:\n- Required if providing fare information using fare_rules.txt \n- Optional otherwise.",
                        "type": "integer"
                    },
                    "stop_url": {
                        "description": "URL of a web page about the location. This should be different from the agency.agency_url and the routes.route_url field values.",
                        "type": "string"
                    },
                    "location_type": {
                        "description": "Location type. Valid options are:\n\n0 (or blank) - Stop (or Platform). A location where passengers board or disembark from a transit vehicle. Is called a platform when defined within a parent_station.\n1 - Station. A physical structure or area that contains one or more platform.\n2 - Entrance/Exit. A location where passengers can enter or exit a station from the street. If an entrance/exit belongs to multiple stations, it may be linked by pathways to both, but the data provider must pick one of them as parent.\n3 - Generic Node. A location within a station, not matching any other location_type, that may be used to link together pathways define in pathways.txt.\n4 - Boarding Area. A specific location on a platform, where passengers can board and/or alight vehicles.",
                        "type": "string"
                    },
                    "parent_station": {
                        "description": "Defines hierarchy between the different locations defined in stops.txt. It contains the ID of the parent location, as followed:\n\n- Stop/platform (location_type=0): the parent_station field contains the ID of a station.\n- Station (location_type=1): this field must be empty.\n- Entrance/exit (location_type=2) or generic node (location_type=3): the parent_station field contains the ID of a station (location_type=1)\n- Boarding Area (location_type=4): the parent_station field contains ID of a platform.\n\nConditionally Required:\n- Required for locations which are entrances (location_type=2), generic nodes (location_type=3) or boarding areas (location_type=4).\n- Optional for stops/platforms (location_type=0).\n- Forbidden for stations (location_type=1).\n",
                        "type": "integer"
                    },
                    "stop_timezone": {
                        "description": "Timezone of the location. If the location has a parent station, it inherits the parent station’s timezone instead of applying its own. Stations and parentless stops with empty stop_timezone inherit the timezone specified by agency.agency_timezone. If stop_timezone values are provided, the times in stop_times.txt should be entered as the time since midnight in the timezone specified by agency.agency_timezone. This ensures that the time values in a trip always increase over the course of a trip, regardless of which timezones the trip crosses.",
                        "type": "string"
                    },
                    "wheelchair_boarding": {
                        "description": "Indicates whether wheelchair boardings are possible from the location. Valid options are: \n\nFor parentless stops:\n0 or empty - No accessibility information for the stop.\n1 - Some vehicles at this stop can be boarded by a rider in a wheelchair.\n2 - Wheelchair boarding is not possible at this stop. \n\nFor child stops: \n0 or empty - Stop will inherit its wheelchair_boarding behavior from the parent station, if specified in the parent.\n1 - There exists some accessible path from outside the station to the specific stop/platform.\n2 - There exists no accessible path from outside the station to the specific stop/platform.\n\nFor station entrances/exits: \n0 or empty - Station entrance will inherit its wheelchair_boarding behavior from the parent station, if specified for the parent.\n1 - Station entrance is wheelchair accessible.\n2 - No accessible path from station entrance to stops/platforms.",
                        "type": "string"
                    },
                    "level_id": {
                        "description": "Level of the location. The same level may be used by multiple unlinked stations.",
                        "type": "integer"
                    },
                    "platform_code": {
                        "description": "Platform identifier for a platform stop (a stop belonging to a station). This should be just the platform identifier (eg. \"G\" or \"3\"). Words like “platform” or \"track\" (or the feed’s language-specific equivalent) should not be included. This allows feed consumers to more easily internationalize and localize the platform identifier into other languages.",
                        "type": "string"
                    },
                    "tdei_stop_id": {
                        "description": "TDEI assigned stop id. Included to avoid potential duplicates in the gtfs stop_id.",
                        "type": "integer"
                    },
                    "gtfs_stop_id": {
                        "description": "stop_id from GTFS.\n\nIdentifies a location: stop/platform, station, entrance/exit, generic node or boarding area (see location_type). \n\nMultiple routes may use the same stop_id.",
                        "type": "integer"
                    }
                },
                "example": {
                    "gtfs_stop_id": 990006,
                    "stop_code": "stop code - need example",
                    "stop_name": "Northgate Station",
                    "tts_stop_name": "Northgate Station - need to verify",
                    "stop_desc": "Northgate Transit station - need more detail",
                    "stop_lat": "47.70312",
                    "stop_lon": "-122.32839",
                    "zone_id": "fare zoneid - need example",
                    "stop_url": "https://www.soundtransit.org/ride-with-us/stops-stations/northgate-station",
                    "location_type": "1",
                    "parent_station": "not valid for Northgate, but will be valid for others",
                    "stop_timezone": "America/Los_Angeles",
                    "wheelchair_boarding": "1",
                    "level_id": "level - need example",
                    "platform_code": "not valid for northgate, but may valid for others",
                    "tdei_stop_id": 23
                }
            },
            "agency": {
                "description": "Includes gtfs agency information and a tdei agency id. Necessary as gtfs agency id may not be unique across agencies.",
                "required": [
                    "tdei_agency_id",
                    "agency_name"
                ],
                "type": "object",
                "properties": {
                    "tdei_agency_id": {
                        "description": "tdei-assigned agency id. Necessary to ensure that agency ids are unique. Represented as a UUID.",
                        "type": "string"
                    },
                    "agency_name": {
                        "description": "Agency name. Typically the agency name used in GTFS releases.",
                        "type": "string"
                    }
                },
                "example": {
                    "tdei_station_id": 37,
                    "station_name": "King County Metro"
                }
            },
            "station": {
                "description": "Includes gtfs station information and a tdei agency id. Necessary as gtfs station id may not be unique across agencies.",
                "required": [
                    "tdei_station_id",
                    "station_name"
                ],
                "type": "object",
                "properties": {
                    "tdei_station_id": {
                        "description": "tdei assigned station id. Necessary to ensure that station ids are unique.",
                        "type": "integer"
                    },
                    "station_name": {
                        "description": "station_name used in GTFS files",
                        "type": "string"
                    }
                },
                "example": {
                    "tdei_station_id": 30,
                    "station_name": "Northgate"
                }
            },
            "gtfs_flex_upload": {
                "title": "Root Type for gtfs_flex",
                "description": "represents a gtfs_flex data file. same as in consumer api, ",
                "required": [
                    "tdei_agency_id",
                    "collected_by",
                    "collection_date",
                    "collection_method",
                    "valid_from",
                    "schema_version",
                    "uri",
                    "data_source"
                ],
                "type": "object",
                "properties": {
                    "tdei_agency_id": {
                        "description": "tdei-assigned agency id. Represented as UUID. Agency ids can be retrieved using the /api/v1.0/agencies path.",
                        "type": "string"
                    },
                    "collected_by": {
                        "description": "Description of who data was collected by. See Best Practices document for information on how to format this string.",
                        "type": "string"
                    },
                    "collection_date": {
                        "format": "date-time",
                        "description": "date-time that data was collected",
                        "type": "string"
                    },
                    "collection_method": {
                        "description": "Method by which the data was collected. See Best Practices document for information on how to format this string.",
                        "type": "string"
                    },
                    "valid_from": {
                        "format": "date-time",
                        "description": "date from which this file is valid",
                        "type": "string"
                    },
                    "valid_to": {
                        "format": "date-time",
                        "description": "date until which this data is valid",
                        "type": "string"
                    },
                    "schema_version": {
                        "description": "version of gtfs flex schema this file conforms to",
                        "type": "string"
                    },
                    "uri": {
                        "description": "uri where the flex file can be retrieved from",
                        "type": "string"
                    },
                    "data_source": {
                        "description": "Description of data source or sources from which the data was collected. See Best Practices document for information on how to format this string.",
                        "type": "string"
                    },
                    "polygon": {
                        "description": "Optional polygon that indicates the boundaries of data included in this file. ",
                        "type": "string"
                    }
                },
                "example": {
                    "tdei_agency_id": "some text",
                    "collected_by": "some text",
                    "collection_date": "2018-02-10T09:30Z",
                    "collection_method": "some text",
                    "valid_from": "2018-02-10T09:30Z",
                    "valid_to": "2018-02-10T09:30Z",
                    "schema_version": "some text",
                    "confidence_level": 42,
                    "uri": "some text",
                    "data_source": "some text",
                    "polygon": "some text"
                }
            },
            "gtfs_pathways_upload": {
                "title": "Root Type for gtfs_flex",
                "description": "represents a gtfs_flex data file. same as in consumer api, ",
                "required": [
                    "tdei_agency_id",
                    "collected_by",
                    "collection_date",
                    "collection_method",
                    "valid_from",
                    "schema_version",
                    "uri",
                    "data_source",
                    "tdei_station_id"
                ],
                "type": "object",
                "properties": {
                    "tdei_agency_id": {
                        "description": "tdei-assigned agency id. Represented as UUID. Agency ids can be retrieved using the /api/v1.0/agencies path.",
                        "type": "string"
                    },
                    "collected_by": {
                        "description": "Description of who data was collected by. See Best Practices document for information on how to format this string.",
                        "type": "string"
                    },
                    "collection_date": {
                        "format": "date-time",
                        "description": "date-time that data was collected",
                        "type": "string"
                    },
                    "collection_method": {
                        "description": "Method by which the data was collected. See Best Practices document for information on how to format this string.",
                        "type": "string"
                    },
                    "valid_from": {
                        "format": "date-time",
                        "description": "date from which this file is valid",
                        "type": "string"
                    },
                    "valid_to": {
                        "format": "date-time",
                        "description": "date until which this data is valid",
                        "type": "string"
                    },
                    "schema_version": {
                        "description": "version of gtfs pathways schema this file conforms to",
                        "type": "string"
                    },
                    "uri": {
                        "description": "uri where the pathways file can be retrieved from",
                        "type": "string"
                    },
                    "data_source": {
                        "description": "Description of data source or sources from which the data was collected. See Best Practices document for information on how to format this string.",
                        "type": "string"
                    },
                    "tdei_station_id": {
                        "description": "tdei-assigned station id. Represented as UUID. Station ids can be retrieved using the /api/v1.0/stations path.",
                        "type": "string"
                    }
                },
                "example": {
                    "tdei_agency_id": "some text",
                    "collected_by": "some text",
                    "collection_date": "2018-02-10T09:30Z",
                    "collection_method": "some text",
                    "valid_from": "2018-02-10T09:30Z",
                    "valid_to": "2018-02-10T09:30Z",
                    "schema_version": "some text",
                    "confidence_level": 6,
                    "uri": "some text",
                    "data_source": "some text",
                    "tdei_station_id": "some text"
                }
            },
            "gtfs_flex_download": {
                "title": "Root Type for gtfs_flex",
                "description": "represents a gtfs_flex data file. same as in consumer api, ",
                "required": [
                    "tdei_agency_id",
                    "collected_by",
                    "collection_date",
                    "collection_method",
                    "valid_from",
                    "schema_version",
                    "confidence_level",
                    "uri",
                    "data_source",
                    "polygon"
                ],
                "type": "object",
                "properties": {
                    "tdei_agency_id": {
                        "description": "tdei-assigned agency id. Represented as UUID. Agency ids can be retrieved using the /api/v1.0/agencies path.",
                        "type": "string"
                    },
                    "collected_by": {
                        "description": "Description of who data was collected by. See Best Practices document for information on how to format this string.",
                        "type": "string"
                    },
                    "collection_date": {
                        "format": "date-time",
                        "description": "date-time that data was collected",
                        "type": "string"
                    },
                    "collection_method": {
                        "description": "Method by which the data was collected. See Best Practices document for information on how to format this string.",
                        "type": "string"
                    },
                    "valid_from": {
                        "format": "date-time",
                        "description": "date from which this file is valid",
                        "type": "string"
                    },
                    "valid_to": {
                        "format": "date-time",
                        "description": "date until which this data is valid",
                        "type": "string"
                    },
                    "schema_version": {
                        "description": "version of gtfs flex schema this file conforms to",
                        "type": "string"
                    },
                    "confidence_level": {
                        "description": "tdei-generated confidence level",
                        "type": "integer"
                    },
                    "uri": {
                        "description": "uri where the flex file can be retrieved from",
                        "type": "string"
                    },
                    "data_source": {
                        "description": "Description of data source or sources from which the data was collected. See Best Practices document for information on how to format this string.",
                        "type": "string"
                    },
                    "polygon": {
                        "description": "Polygon that indicates the boundaries of data included in this file. ",
                        "type": "string"
                    }
                },
                "example": {
                    "tdei_agency_id": "some text",
                    "collected_by": "some text",
                    "collection_date": "2018-02-10T09:30Z",
                    "collection_method": "some text",
                    "valid_from": "2018-02-10T09:30Z",
                    "valid_to": "2018-02-10T09:30Z",
                    "schema_version": "some text",
                    "confidence_level": 42,
                    "uri": "some text",
                    "data_source": "some text",
                    "polygon": "some text"
                }
            },
            "gtfs_pathways_download": {
                "title": "Root Type for gtfs_flex",
                "description": "represents a gtfs_flex data file. same as in consumer api, ",
                "required": [
                    "tdei_agency_id",
                    "collected_by",
                    "collection_date",
                    "collection_method",
                    "valid_from",
                    "schema_version",
                    "confidence_level",
                    "uri",
                    "data_source",
                    "tdei_station_id"
                ],
                "type": "object",
                "properties": {
                    "tdei_agency_id": {
                        "description": "tdei-assigned agency id. Represented as UUID. Agency ids can be retrieved using the /api/v1.0/agencies path.",
                        "type": "string"
                    },
                    "collected_by": {
                        "description": "Description of who data was collected by. See Best Practices document for information on how to format this string.",
                        "type": "string"
                    },
                    "collection_date": {
                        "format": "date-time",
                        "description": "date-time that data was collected",
                        "type": "string"
                    },
                    "collection_method": {
                        "description": "Method by which the data was collected. See Best Practices document for information on how to format this string.",
                        "type": "string"
                    },
                    "valid_from": {
                        "format": "date-time",
                        "description": "date from which this file is valid",
                        "type": "string"
                    },
                    "valid_to": {
                        "format": "date-time",
                        "description": "date until which this data is valid",
                        "type": "string"
                    },
                    "schema_version": {
                        "description": "version of gtfs pathways schema this file conforms to",
                        "type": "string"
                    },
                    "confidence_level": {
                        "description": "tdei-generated confidence level",
                        "type": "integer"
                    },
                    "uri": {
                        "description": "uri where the pathways file can be retrieved from",
                        "type": "string"
                    },
                    "data_source": {
                        "description": "Description of data source or sources from which the data was collected. See Best Practices document for information on how to format this string.",
                        "type": "string"
                    },
                    "tdei_station_id": {
                        "description": "tdei-assigned station id. Represented as UUID. Station ids can be retrieved using the /api/v1.0/stations path.",
                        "type": "string"
                    }
                },
                "example": {
                    "tdei_agency_id": "some text",
                    "collected_by": "some text",
                    "collection_date": "2018-02-10T09:30Z",
                    "collection_method": "some text",
                    "valid_from": "2018-02-10T09:30Z",
                    "valid_to": "2018-02-10T09:30Z",
                    "schema_version": "some text",
                    "confidence_level": 6,
                    "uri": "some text",
                    "data_source": "some text",
                    "tdei_station_id": "some text"
                }
            }
        },
        "responses": {
            "Unauthorized": {
                "description": "This request is unauthorized. appID is invalid. Please obtain a valid application ID (appID)."
            },
            "InternalServerError": {
                "description": "An server error occurred."
            },
            "PathwaysFileNotFound": {
                "description": "A GTFS pathways file that matches the specified parameters (combination of agencyid, stationid, confidence level, and version) was not found."
            },
            "FlexFileNotFound": {
                "description": "A GTFS flex file that matches the specified parameters (combination of agencyid, confidence level, and version) was not found."
            },
            "FileIdNotFound": {
                "description": "A file with the specified id was not found. Use the /tdei_consumer/v1.0/gtfs_pathways or /tdei_consumer/v1.0/gtfs_flex endpoints to find valid file ids. "
            },
            "OSWNotFound": {
                "description": "OSW data meeting the specifications (version and bounding box) was not found.Data is expected to be available for King and Snohomish counties in Washington, Multnomah and Columbia counties in Oregon, and Baltimore and Harford counties in Maryland."
            },
            "InvalidRequest": {
                "description": "The request was invalid. For example, trying to do a meta-data update that is not allowed."
            }
        },
        "securitySchemes": {
            "ApplicationId": {
                "type": "apiKey",
                "description": "Application Id required by all applications that use the TDEI Consumer API.",
                "name": "appID",
                "in": "query"
            }
        }
    },
    "security": [
        {
            "ApplicationId": []
        }
    ]
}
